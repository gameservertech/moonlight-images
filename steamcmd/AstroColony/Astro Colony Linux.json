{
  "Uuid": "72141793-81d9-400b-897f-678e30c2027b",
  "Name": "Astro Colony Linux",
  "Description": "Astro Colony is a first-person open-world sci-fi game focused on the construction, automation, and management of your space stations.",
  "ConfigFiles": "{\r\n    \"/AstroColony/Saved/Config/LinuxServer/ServerSettings.ini\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"ServerPassword=\": \"ServerPassword={{server.build.env.SRV_PW}}\",\r\n            \"Seed=\": \"Seed={{server.build.env.SEED}}\",\r\n            \"MapName=\": \"MapName={{server.build.env.MAP_NAME}}\",\r\n            \"MaxPlayers=\": \"MaxPlayers={{server.build.env.MAX_PLAYERS}}\",\r\n            \"SavegameName=\": \"SavegameName={{server.build.env.MAP_NAME}}\",\r\n            \"ShouldLoadLatestSavegame=\": \"ShouldLoadLatestSavegame={{server.build.env.LOAD_SAVE}}\",\r\n            \"AdminList=\": \"AdminList={{server.build.env.ADMINS}}\",\r\n            \"SharedTechnologies=\": \"SharedTechnologies={{server.build.env.SHARED_TECH}}\",\r\n            \"OxygenConsumption=\": \"OxygenConsumption={{server.build.env.OXYGEN}}\",\r\n            \"FreeConstruction=\": \"FreeConstruction={{server.build.env.FREE_CONSTRUCT}}\",\r\n            \"AutosaveInterval=\": \"AutosaveInterval={{server.build.env.AUTOSAVE_INT}}\",\r\n            \"AutosavesCount=\": \"AutosavesCount={{server.build.env.AUTOSAVE_COUNT}}\"\r\n        }\r\n    }\r\n}",
  "StopCommand": "^^C",
  "StartupDetection": "LogBlueprintUserMessages:",
  "InstallScript": "#!/bin/bash\r\n# steamcmd Base Installation Script\r\n#\r\nclear\r\nRED='\\033[0;31m'\r\nGREEN='\\033[0;32m'\r\nYELLOW='\\033[1;33m'\r\nBLUE='\\033[0;34m'\r\nNC='\\033[0m'\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}Astro Coloyny Installscript${NC}\"\r\necho -e \"${YELLOW}Egg by gOOvER | https://goover.dev${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n#apt -y update\r\n#apt -y --no-install-recommends install curl lib32gcc-s1 ca-certificates jq dos2unix\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}download and install steamcmd. please wait...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n## just in case someone removed the defaults.\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd /tmp\r\nmkdir -p /mnt/server/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C /mnt/server/steamcmd\r\nmkdir -p /mnt/server/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd /mnt/server/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root /mnt\r\nexport HOME=/mnt/server\r\necho -e \"${GREEN}..done..${NC}\"\r\n\r\n## install game using steamcmd\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}install game using steamcmd. please wait...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n./steamcmd.sh +force_install_dir /mnt/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update 1007 $( [[ -z ${SRCDS_BETAID} ]] || printf %s \"-beta ${SRCDS_BETAID}\" ) $( [[ -z ${SRCDS_BETAPASS} ]] || printf %s \"-betapassword ${SRCDS_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\necho -e \"${GREEN}..done..${NC}\"\r\n\r\n## set up 32 bit libraries\r\nmkdir -p /mnt/server/.steam/sdk32\r\ncp -v linux32/steamclient.so ../.steam/sdk32/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p /mnt/server/.steam/sdk64\r\ncp -v linux64/steamclient.so ../.steam/sdk64/steamclient.so\r\n\r\n# add below your custom commands if needed\r\n# download Serverfiles\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}download server....${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\nserverFoldersLink=\"https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=172paqsE1eYO8U54BRCkP94rC_m-ovJD3' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\\1\\n/p')&id=172paqsE1eYO8U54BRCkP94rC_m-ovJD3\"\r\nwget --load-cookies /tmp/cookies.txt $serverFoldersLink -O AstroColonyLinuxServer.zip && rm -rf /tmp/cookies.txt\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}unpack server....${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\nunzip -u AstroColonyLinuxServer.zip\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}cleanup....${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\ncp -fr LinuxServer/* $HOME\r\nrm -fR LinuxServer\r\nrm -f AstroColonyLinuxServer.zip\r\nrm -f AstroColonyServer.sh\r\nrm -f .wget-hsts\r\n\r\ncp -v $HOME/linux64/steamclient.so ../AstroColony/Binaries/Linux/steamclient.so\r\nchmod +x ../AstroColony/Binaries/Linux/AstroColonyServer\r\n\r\nmkdir -p $HOME/AstroColony/Saved/Config/LinuxServer\r\nFILE=$HOME/AstroColony/Saved/Config/LinuxServer/ServerSettings.ini\r\nif [ -f \"$FILE\" ]; then\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  echo -e \"${GREEN}ServerSettings.ini found.${NC}\"\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\nelse  \r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  echo -e \"${RED}No ServerSettings.ini found. Downloading default...${NC}\"\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  cd $HOME/AstroColony/Saved/Config/LinuxServer/\r\n  curl -sSL -o ServerSettings.ini https://raw.githubusercontent.com/pteroeggsx/goovers-eggs/main/egg-astro-colony/ServerSettings.ini\r\nfi\r\necho -e \"${GREEN}..done..${NC}\"\r\n\r\n## install end\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${GREEN}Installation completed...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"",
  "InstallDockerImage": "ghcr.io/goover/installers:debian",
  "InstallEntrypoint": "bash",
  "Startup": "./AstroColony/Binaries/Linux/AstroColonyServer -log -QueryPort={{SERVER_PORT}} -SteamServerName=\"{{SRV_NAME}}\"",
  "Allocations": 1,
  "DockerImages": [
    {
      "Default": true,
      "Name": "ghcr.io/goover/steamcmd:debian"
    }
  ],
  "Variables": [
    {
      "Key": "SRV_NAME",
      "DefaultValue": "goover.dev - Pterodactyl Egg"
    },
    {
      "Key": "SRV_PW",
      "DefaultValue": "not4you"
    },
    {
      "Key": "MAP_NAME",
      "DefaultValue": "mymap"
    },
    {
      "Key": "MAX_PLAYERS",
      "DefaultValue": "5"
    },
    {
      "Key": "LOAD_SAVE",
      "DefaultValue": "true"
    },
    {
      "Key": "ADMINS",
      "DefaultValue": ""
    },
    {
      "Key": "OXYGEN",
      "DefaultValue": "true"
    },
    {
      "Key": "FREE_CONSTRUCT",
      "DefaultValue": "false"
    },
    {
      "Key": "SRCDS_APPID",
      "DefaultValue": "2662210"
    },
    {
      "Key": "SEED",
      "DefaultValue": "873427656732457"
    },
    {
      "Key": "AUTOSAVE_INT",
      "DefaultValue": "300"
    },
    {
      "Key": "AUTOSAVE_COUNT",
      "DefaultValue": "3"
    },
    {
      "Key": "SHARED_TECH",
      "DefaultValue": "true"
    },
    {
      "Key": "AUTO_UPDATE",
      "DefaultValue": "0"
    }
  ],
  "TagsJson": "[]",
  "BackgroundImageUrl": ""
}